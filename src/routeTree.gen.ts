/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MakeQRouteImport } from './routes/makeQ'
import { Route as MakeInterViewRouteImport } from './routes/makeInterView'
import { Route as IndexRouteImport } from './routes/index'

const MakeQRoute = MakeQRouteImport.update({
  id: '/makeQ',
  path: '/makeQ',
  getParentRoute: () => rootRouteImport,
} as any)
const MakeInterViewRoute = MakeInterViewRouteImport.update({
  id: '/makeInterView',
  path: '/makeInterView',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/makeInterView': typeof MakeInterViewRoute
  '/makeQ': typeof MakeQRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/makeInterView': typeof MakeInterViewRoute
  '/makeQ': typeof MakeQRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/makeInterView': typeof MakeInterViewRoute
  '/makeQ': typeof MakeQRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/makeInterView' | '/makeQ'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/makeInterView' | '/makeQ'
  id: '__root__' | '/' | '/makeInterView' | '/makeQ'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MakeInterViewRoute: typeof MakeInterViewRoute
  MakeQRoute: typeof MakeQRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/makeQ': {
      id: '/makeQ'
      path: '/makeQ'
      fullPath: '/makeQ'
      preLoaderRoute: typeof MakeQRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/makeInterView': {
      id: '/makeInterView'
      path: '/makeInterView'
      fullPath: '/makeInterView'
      preLoaderRoute: typeof MakeInterViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MakeInterViewRoute: MakeInterViewRoute,
  MakeQRoute: MakeQRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
